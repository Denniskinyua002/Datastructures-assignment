def infix_to_postfix(expression):
    precedence = {'+': 1, '-': 1, '*': 2, '/': 2, '%': 2}

    output = []
    stack = []

    for token in expression:
        if token.isdigit():
            output.append(token)
        elif token in precedence:
            while (stack and precedence.get(token, 0) <= precedence.get(stack[-1], 0)):
                output.append(stack.pop())
            stack.append(token)
        elif token == '(':
            stack.append(token)
        elif token == ')':
            while stack and stack[-1] != '(':
                output.append(stack.pop())
            stack.pop()  # Discard '('

    while stack:
        output.append(stack.pop())

    return ''.join(output)


if __name__ == "__main__":
    infix_expression = input("Enter an infix expression: ")
    postfix_expression = infix_to_postfix(infix_expression)
    print("Postfix expression:", postfix_expression)
